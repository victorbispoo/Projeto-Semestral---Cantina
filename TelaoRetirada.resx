<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABrcSURBVHhe7d15
        sGZ1fefxT9PSLI3DoqIYN8gkijhxVMQJKnErTUQHdXTGBYkh0SjG6JQz9kzVWKJJaeKCmiqiMSAaE6Oi
        TowLBicZR1FR4wYTR1lMlMUMiwpoI900M3XgQZuf34a7PMs553m9q17/3Hv7Ls859fv+7u3nOSeRJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEka
        WXskuUeSByc5OsmvJ3lpki2Nl0zed0ySo5LcL8ne7SeTJEn9arfJ0D4+yWuTfCTJBUl2JPl/63Bpkk8l
        OW2ycXi4jYEkSYtrQ5IjkvyXJB9O8r1ieM/K9iRfTvLHSZ6cZJ/2m5MkSdNr9ySPSXJykouLwbwoP05y
        ZpIXJ7lX+01LkqS1dWiSNya5ohi+fXNDkk8meY6/DEiStPo2JTl28v/v7ZAdih8meWeSw9sfTpIk3bJu
        8B+X5PxioA7ZWUmeOHnugiRJmtS9XO93e/Z/+7NwbpJn2AhIknTTE/u+XgzLMfv7JI9qHwhJkpaheyc5
        oxiOy6S7XsF92wdGkqQxdrsk/y3JtmIgLqPucXjV5L9BJEkaZQcP/Jn9s9Q98fER7QMmSdLQe/7kpXHt
        4OOnuksXnzR5NYQkSYOu+9P224thx651TxI8pH0gJUkaSj+X5OxiwHHbrkry1PYBlSSp7x2Z5J+LwcbK
        dZcWfqXrBkiShtIjk1xTDDTWpruksOcFSJJ6XXfJ22uLIcb6/G2SfdsHW5KkPtRdx//6YngxHV9Jcof2
        QZckaZG9YPIytnZoMV1ftQmQJPWlLcWgYna6vwQc0B4ESZLmVffs9NcWA4rZ+3ySfdoDIknSrOuG/5uL
        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
        JJcUCzusxJPaE0qSNJwOTnJBsbjDbenOHUnSgDsoybnFAg+7ctXkapOSpIF3YJIvFws9VD7ZnkCSpOG2
        7+SlXe1iD61XtCePJGnY7Z3k48WCDzt7WHviSJKG36YkpxeLPnR+ODlHJEkjrLvG+6nF4g8fa08WSdK4
        6p7lfVIxAFhuz29PFEnSONtSDAGW0/bJK0YkSUvSi5LcUAwElssZ7YkhSRp/x01+A2yHAsvj19uTQpK0
        HD09ybZiMDB+3bP/u2tFSJKWtKOTbC0GBON2cnsiSJKWr6Mm14NvhwTjdb/2JJAkLWcPSnJ5MSgYnzPb
        gy9JWu4OS3JpMTAYlye0B16SpHsluaAYGozD37v1ryRpVx2U5JxieDB8j20PtiRJO3dAkrOLAcJwfbo9
        yJIkVXWvE/9UMUgYnu7Kjw9tD7AkSbtq78klY9uBwrC8sz2wkiTdVt394t9XDBWG4Uo3/ZEkrbWNSU4p
        hgv991vtwZQkaTV1Lx97YzFg6K/uORxe9idJmkpbikFD/3x/cl0HSZKm1guT7CiGDv3R3e1RkqSp9+wk
        24vBw+L9cXuwJEmaZv8+yXXFAGJxvphkr/ZASZI07X4tyY+KQcT8XZLkbu0BkiRpVj08yQ+KgcT8XJPk
        /u2BkSRp1h2e5PJiMDF717vNryRpkd0nyUXFgGJ2uuF/bHsgJEmad91rz88vBhXT170Us3s1hiRJveiu
        Sf6hGFhMTzf8j2sfeEmSFt2dkny5GFys37WTl2BKktTL9ptcj74dYKzdFUke1j7QkiT1rT2SvKsYZKze
        tyZPtJQkaRB1d6T7vSQ3FEONlfmbyX+rSJI0uLrXqnd3qWuHG7vWvczvxCS7tQ+mJElD6heTfLUYdPys
        7tK+R7UPoCRJQ233yW+1bim8a+9Lcsf2gZMkaQw9OsmFxfBbZt3j8Zj2gZIkaWztneR1SbYXw3CZdK/t
        /4PJ4yFJ0tLUvbztY8VgHLvulRHdn/sPaR8QSZKWqWOW6DLCZ7iFryRJP617ydszk3yjGJpD1/1Xx7uT
        PLD9oSVJ0k11G4GnJDmrGKRDc3WSNyW5Z/tDSpKkXffgJG9LclUxXPvsM0mOT7JP+wNJkqSVtznJs5N8
        OMmPi4HbB19K8l+T/Mv2m5ckSeuvu9tg91yBdyb5bjGI5+XKJKcnea4/8UuSNN+6Gw4dNhnC70hyzuS1
        9e2wXq/uXgbdcxL+JMlvJDl08rUlSVJP6p5E2P1G3l1Z74TJk/D+Ksmnk3w9yaVJvjfR3Z/go5PX5HfP
        Neg+9tVJXprk6UmOTHJQ+wUkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZK0zP1/KfL0zmURYhkAAAAASUVORK5CYII=
</value>
  </data>
</root>